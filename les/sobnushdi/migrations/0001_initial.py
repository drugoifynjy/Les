# Generated by Django 4.0.1 on 2022-03-22 18:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('person', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Breed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Название породы')),
            ],
            options={
                'verbose_name': 'Порода',
                'verbose_name_plural': 'Породы',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DistrictForestry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Участковое лесничество')),
            ],
            options={
                'verbose_name': 'Участковое лесничество',
                'verbose_name_plural': 'Участковые лесничества',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Forestry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Лесничество')),
            ],
            options={
                'verbose_name': 'Лесничество',
                'verbose_name_plural': 'Лесничества',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='HeatedPremise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cadastral_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Кадастровый номер')),
                ('postcode', models.CharField(blank=True, default='646350', max_length=6, null=True, verbose_name='Индекс')),
                ('region', models.CharField(blank=True, default='Омская', max_length=100, null=True, verbose_name='Область')),
                ('district', models.CharField(blank=True, default='Колосовский', max_length=50, null=True, verbose_name='Район')),
                ('locality', models.CharField(blank=True, default='Колосовка', max_length=50, null=True, verbose_name='Населенный пункт')),
                ('street', models.CharField(blank=True, max_length=50, null=True, verbose_name='Улица')),
                ('house_number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Дом')),
                ('apartment_number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Квартира')),
            ],
            options={
                'verbose_name': 'Адрес отапливаемого помещения',
                'verbose_name_plural': 'Адреса отапливаемых помещений',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Tract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Урочище')),
            ],
            options={
                'verbose_name': 'Урочище',
                'verbose_name_plural': 'Урочища',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Statement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_statement', models.PositiveSmallIntegerField(verbose_name='Номер заявления')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата заявления')),
                ('there_is_a_contract', models.BooleanField(default=False, editable=False, verbose_name='Есть договор')),
                ('quantity', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Количество по заявлению')),
                ('refusal_to_conclude_a_contract', models.BooleanField(default=False, verbose_name='Отказ')),
                ('heated_promise', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sobnushdi.heatedpremise', verbose_name='Адрес отапливаемого помещения')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='person.person', verbose_name='ФИО')),
            ],
            options={
                'verbose_name': 'Заявление',
                'verbose_name_plural': 'Заявления',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PlotWoodSpecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_trees', models.IntegerField(blank=True, null=True, verbose_name='Количество деревьев')),
                ('large', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Крупная')),
                ('average', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Средняя')),
                ('small', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Мелкая')),
                ('firewood', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Дровяная')),
                ('brushwood', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Хворост(неликвид)')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Цена')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sobnushdi.breed', verbose_name='Порода')),
            ],
            options={
                'verbose_name': 'Данные по породе',
                'verbose_name_plural': 'Данные по породам',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Plot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_plot', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Номер делянки')),
                ('area', models.FloatField(blank=True, null=True, verbose_name='Площадь')),
                ('quarter', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Квартал')),
                ('section', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Выдел')),
                ('chop_type', models.CharField(blank=True, default='рубка спелых и перестойных лесных насаждений', max_length=100, null=True, verbose_name='Вид рубки')),
                ('type_of_forestry', models.CharField(blank=True, default='мягколиственное', max_length=100, null=True, verbose_name='Хозяйство')),
                ('business', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Деловая')),
                ('firewood', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Дровяная')),
                ('liquid_wood', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Ликвидная всего')),
                ('brushwood', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Хворост(неликвид)')),
                ('total', models.PositiveIntegerField(blank=True, null=True, verbose_name='Всего')),
                ('cost', models.FloatField(blank=True, null=True, verbose_name='Стоимость')),
                ('district_forestry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sobnushdi.districtforestry', verbose_name='Участковое лесничество')),
                ('forestry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sobnushdi.forestry', verbose_name='Лесничество')),
                ('plot_wood_species', models.ManyToManyField(blank=True, to='sobnushdi.PlotWoodSpecies', verbose_name='Данные по породе')),
                ('tract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sobnushdi.tract', verbose_name='Урочище')),
            ],
            options={
                'verbose_name': 'Делянка',
                'verbose_name_plural': 'Делянки',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_decree', models.CharField(max_length=7, verbose_name='номер распоряжения')),
                ('date_decree', models.DateField(blank=True, null=True, verbose_name='дата распоряжения')),
                ('number', models.CharField(blank=True, max_length=7, null=True, verbose_name='номер договора')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата договора')),
                ('plot', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sobnushdi.plot', verbose_name='Делянка')),
                ('statement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sobnushdi.statement', verbose_name='Заявление')),
            ],
            options={
                'verbose_name': 'Договор',
                'verbose_name_plural': 'Договоры',
                'ordering': ['id'],
            },
        ),
    ]
